<?xml version="1.0" encoding="utf-8"?>
<Lockscreen version="2" displayDesktop="false" frameRate="0" screenWidth="1080">

    <!--? https://zhuti.designer.xiaomi.com/docs/grammar/ and Suger -->

    <ExternalCommands>
        <Trigger action="resume">
            <VariableCommand name="lightSwitch" expression="0"/>
            <AnimationCommand command="play(0,0)" target="bar_position"/>
            <AnimationCommand command="play(1500,1500)" target="swp_alpha"/>
            <AnimationCommand command="play" target="framerateControllerAni2"/>
            <AnimationCommand command="play" delay="1200" target="bar_position"/>
        </Trigger>
        <Trigger action="pause">
            <AnimationCommand command="play(0,0)" target="swp_alpha"/>
            <AnimationCommand command="play(0,0)" target="bar_position"/>
        </Trigger>
        <Trigger action="resume,pause,init">
            <VariableCommand expression="#ResumeFlag+1" name="ResumeFlag"/>
        </Trigger>
    </ExternalCommands>

    <VariableBinders>
        <ContentProviderBinder name="data" columns="icon,title,content,time,info,subtext,key" countName="hasnotifications" uri="content://keyguard.notification/notifications">
            <List name="notice_list"/>
            <Variable name="notice_key" column="key" type="string[]"/>
            <Variable name="notice_time" column="time" type="string[]"/>
            <Variable name="notice_title" column="title" type="string[]"/>
            <Variable name="notice_content" column="content" type="string[]"/>
            <Variable name="notice_icon0" column="icon" row="0" type="blob.bitmap"/>
            <Variable name="notice_icon1" column="icon" row="1" type="blob.bitmap"/>
            <Variable name="notice_icon2" column="icon" row="2" type="blob.bitmap"/>
            <Variable name="notice_icon3" column="icon" row="3" type="blob.bitmap"/>
            <Trigger>
                <AnimationCommand command="play(0,0)" target="notifUp"/>
                <AnimationCommand command="play(0,0)" target="_notifAni"/>
            </Trigger>
        </ContentProviderBinder>

        <!--! Alarm -->
        <ContentProviderBinder name="DeskClockProvider" whereFormat="enabled == '%d'" whereParas="1" columns="message,enabled,hour,minutes,alarmtime,daysofweek" uri="content://com.android.deskclock/alarm" countName="hasAlarmClock">
            <Variable name="clock_message" type="string[]" column="message"/>
            <Variable name="clock_enabled" type="string[]" column="enabled"/>
            <Variable name="clock_hour" type="string[]" column="hour"/>
            <Variable name="clock_minute" type="string[]" column="minutes"/>
            <Variable name="clock_alarmtime" type="string[]" column="alarmtime"/>
            <Variable name="clock_daysofweek" type="string[]" column="daysofweek"/>
            <Trigger>
                <LoopCommand count="7" indexName="i">
                    <VariableCommand name="isAlarmClock0" expression="0" type="number[]" index="#i"/>
                    <MultiCommand condition="#repetition0 }= #weekVar[#i]">
                        <VariableCommand name="isAlarmClock0" expression="1" type="number[]" index="#i"/>
                        <VariableCommand name="repetition0" expression="#repetition0-#weekVar[#i]" type="number"/>
                    </MultiCommand>
                </LoopCommand>
            </Trigger>
        </ContentProviderBinder>
    </VariableBinders>

    <FramerateController name="framerateControllerAni" initPause="true" loop="false">
        <ControlPoint frameRate="240" time="0"/>
        <ControlPoint frameRate="240" time="2000"/>
        <ControlPoint frameRate="30" time="2001"/>
    </FramerateController>
    <FramerateController name="framerateControllerAni2" initPause="true" loop="false">
        <ControlPoint frameRate="240" time="0"/>
        <ControlPoint frameRate="240" time="4000"/>
        <ControlPoint frameRate="30" time="4001"/>
    </FramerateController>

    <Var name="down_up" expression="520" persist="true" type="number"/>
    <Var name="AlarmHourVar" expression="int(@clock_hour[0])" type="number"/>
    <Var name="up_down" expression="#alarmMusic" persist="true" type="number"/>
    <Var name="widget_on" expression="ifelse(isnull(#widget_on),1,#widget_on)"/>
    <Var name="music_btn" expression="ifelse(isnull(#music_btn),1,#music_btn)"/>
    <Var name="AlarmMinuteVar" expression="int(@clock_minute[0])" type="number"/>
    <Var name="cover_dark" expression="ifelse(isnull(#cover_dark),0,#cover_dark)"/>
    <Var name="lsBar_y" expression="ifelse(#unlocked,#screen_y*0.8,0)"/>
    <Var name="ls_shortcut" expression="ifelse(isnull(#ls_shortcut),1,#ls_shortcut)"/>
    <Var name="repetition0" expression="preciseeval(@clock_daysofweek[0],0)" type="number"/>
    <Var name="weekVar" expression="" type="number[]" values="64,32,16,8,4,2,1" const="true"/>
    <Var name="lsTime_y" expression="ifelse(#unlocked,#screen_y*0.8,#screen_y*0.4)"/>
    <Var name="lsMusic_y" expression="ifelse(#unlocked,#screen_y*0.8,#screen_y*0.3)"/>
    <Var name="alarmMusic" expression="ifelse(#hasAlarmClock != 0,780,680)" persist="true" type="number"/>
    <Var name="btnv" expression="ifelse(gt(abs(#touch_begin_x-#touch_x),20),0,gt(abs(#touch_begin_y-#touch_y),20),0,1)"/>

    <MusicControl name="music_control" autoShow="true"/>
    <Var expression="#ResumeFlag" threshold="1">
        <Trigger>
            <VariableCommand name="MusicState" condition="eq(#music_control.music_state,1)" expression="1"/>
            <VariableCommand name="MusicState" condition="eq(#music_control.music_state,0)" expression="0"/>
            <AnimationCommand command="play(500,500)" condition="eq(#music_control.music_state,1)" target="MusicAni"/>
            <AnimationCommand command="play(0,0)" condition="eq(#music_control.music_state,0)" target="MusicAni"/>
        </Trigger>
    </Var>
    <Var name="MusicAni">
        <VariableAnimation initPause="true" loop="false">
            <AniFrame time="0" value="0"/>
            <AniFrame time="500" value="1"/>
        </VariableAnimation>
    </Var>
    <Var expression="#music_control.music_position" threshold="1">
        <Trigger>
            <AnimationCommand command="play" target="musicPosition"/>
        </Trigger>
    </Var>
    <Var name="musicPosition">
        <VariableAnimation initPause="true" loop="false">
            <AniFrame easeType="ExpoEaseOut" time="0" value="ifelse(#music_control.music_position{1000,0,#musicPosition)"/>
            <AniFrame time="2000" value="#music_control.music_position"/>
        </VariableAnimation>
    </Var>
    <Var name="MusicAniR">
        <VariableAnimation initPause="true" loop="false">
            <AniFrame easeType="SineEaseOut" time="0" value="0"/>
            <AniFrame easeType="CubicEaseOut" time="500" value="1"/>
        </VariableAnimation>
    </Var>
    <Var name="sysTime" expression="#time" threshold="1">
        <Trigger>
            <VariableCommand name="bonk" expression="le(abs(#touch_x-#touch_begin_x),24)*le(abs(#touch_y-#touch_begin_y),24)"/>
            <AnimationCommand command="play(-1,0)" condition="#music_control.music_state == 0" target="MusicAniR"/>
            <AnimationCommand command="play" condition="#music_control.music_state == 1" target="MusicAniR"/>
        </Trigger>
    </Var>
    <Var name="msTime">
        <VariableAnimation>
            <AniFrame time="0" value="10000"/>
            <AniFrame time="10000" value="20000"/>
        </VariableAnimation>
    </Var>
    <Var name="StartPlaceHolder" expression="int(#msTime/24)" threshold="1">
        <Trigger>
            <VariableCommand name="HolderId" condition="eq(#music_control.music_state,1)" expression="int(#HolderId+1)%360"/>
        </Trigger>
    </Var>
    <Var name="PausePlaceHolder" expression="#music_control.music_state" threshold="1">
        <Trigger>
            <VariableCommand name="HolderSrcId" condition="eq(#music_control.music_state,0)" expression="int(#HolderId)*1+2-2"/>
            <VariableCommand name="HolderId" condition="eq(#music_control.music_state,0)" delay="3" expression="int(#HolderSrcId)*1+2-2"/>
        </Trigger>
    </Var>
    
    <Var name="musicTypes" expression="ifelse(strContains(@music_control.package,'com.apple.android.music'),1,strContains(@music_control.package,'com.spotify.music'),2,strContains(@music_control.package,'youtube'),3,0)" type="number"/>

    <Var name="swp_alpha_o" expression="255*#swp_alpha"/>
    <Var name="swp_alpha">
        <VariableAnimation initPause="true" loop="false">
            <AniFrame easeType="ExpoEaseOut" time="0" value="0"/>
            <AniFrame time="1500" value="1"/>
        </VariableAnimation>
    </Var>

    <!-- <Var name="scale_x" expression="ifelse((#screen_height/#name_x.bmp_height)}(#screen_width/#name_x.bmp_width),#screen_height/#name_x.bmp_height,#screen_width/#name_x.bmp_width)-1"/> -->
    
    <Wallpaper x="#screen_width/2" y="#screen_height/2" align="center" alignV="center" blur="0" alpha="255" visibility="1"/>

    <!--! Lock Screen -->
    <Group clip="true" layered="true" h="#screen_height" w="#screen_width">

        <!--! Wallpaper -->
        <!-- <Image name="name_x" x="#screen_width/2" y="0" align="center" scale="1+#scale_x" pivotX="#name_x.bmp_width/2" pivotY="0" src="file:///sdcard/Luculia/Evergard.jpg" visibility="#scale_x } 0" srcType="Uri"/> -->

        <!--? PROPER DOUBLE TAP TO SLEEP IS IMPOSSIBLE HYPEROS 1.0.3-->

        <!--! Clock -->
        <Group y="#lsTime_y" alpha="255+#screenY_alpha" pivotX="#screen_width/2" pivotY="560" scale="1" visibility="1">
            <Group w="1080" h="800" layered="true">
                <Time x="#screen_width/2" y="494" src="clock/time.png" space="20" align="center" alignV="center" formatExp="ifelse(#time_format,'HH:mm','h:mm')" alpha="125"/>
            </Group>
            <Group w="#screen_width" h="400" layered="true">
                <Group alpha="125" visibility="1">
                    <DateTime x="#screen_width/2" y="324" color="#ffffff" size="60" format="EEEE, dd MMMM" fontFamily="mipro-medium" align="center" alignV="center" visibility="1"/>
                </Group>
            </Group>

            <!--! Charging Battery Level -->
            <!-- <Text alpha="125" x="#screen_width/2" y="664" color="#ffffff" size="60" textExp="ifelse(#ChargeWireState,#battery_level+'%'+' Charged','')" fontFamily="mipro-medium" align="center" alignV="center" visibility="1"/> -->
        </Group>

        <!--! Alarm -->
        <Group y="640+#lsTime_y" alpha="255+#screenY_alpha" visibility="#hasAlarmClock == 1">
            <Group alpha="125">
                <Var name="AlarmWidth" expression="#AlarmIcon.bmp_width+16+#Alarmtext.text_width"/>
                <Rectangle x="#screen_width/2" w="280" h="100" cornerRadius="50,50" fillColor="#ff000000" align="center" xfermodeNum="8"/>
                <Rectangle x="#screen_width/2" w="280" h="100" cornerRadius="50,50" fillColor="#ff000000" alpha="255*0.2" align="center"/>
                <Group x="#screen_width/2-#AlarmWidth/2">
                    <Image name="AlarmIcon" x="0" y="50" alignV="center" src="alarm.png"/>
                    <Text name="Alarmtext" x="#AlarmIcon.bmp_width+16" y="50" size="40" alignV="center" color="#ffffff" format="%02d:%02d" paras="#AlarmHourVar,#AlarmMinuteVar" fontFamily="mipro-medium"/>
                </Group>
                <Button x="#screen_width/2" w="240" h="100" align="center" interceptTouch="true">
                    <Triggers>
                        <Trigger action="double" condition="#btnv">
                            <IntentCommand action="android.intent.action.MAIN" package="com.android.deskclock" class="com.android.deskclock.DeskClockTabActivity"/>
                            <ExternCommand command="unlock"/>
                        </Trigger>
                    </Triggers>
                </Button>
            </Group>
        </Group>

        <!--! Bar -->
        <Group alpha="255+#screenY_alpha" visibility="1" y="#lsBar_y">
            <Var name="bar_position">
            <VariableAnimation initPause="true" loop="false">
                <AniFrame easeType="BackEaseOut" time="0" value="0"/>
                <AniFrame time="1200" value="1"/>
                <AniFrame time="2600" value="0"/>
            </VariableAnimation>
            </Var>

            <Rectangle align="center" alignV="bottom" cornerRadius="8,8" fillColor="#ffffffff" h="13" visibility="1" w="385" x="#screen_width/2" xfermodeNum="8" y="#screen_height-20-50*#bar_position"/>
            <Group alpha="255">
                <Rectangle align="center" alignV="bottom" cornerRadius="8,8" fillColor="#ffffffff" h="13" visibility="1" w="385" x="#screen_width/2" y="#screen_height-20-50*#bar_position"/>
            </Group>
        </Group>

        <!--! Notifications -->
        <Group alpha="255" visibility="1">
            <Var name="notif_limitHeight" expression="182*4"/>
            <Var name="notif_listHeight" expression="min(182*#hasnotifications,#notif_limitHeight)"/>
            <Group alpha="#swp_alpha_o" visibility="1" y="0">
                <Group alpha="255" visibility="1" y="0">
                    <Group alpha="255+#screenY_alpha" clip="true" h="#notif_limitHeight" visibility="1" w="#screen_width" y="(#screen_height-#down_up)+455*0-#notif_listHeight+182+#lsMusic_y">
                        <Var name="_notifMove" expression="int(#touch_x-#touch_begin_x)*#NotifMoveDown+#_notifAni"/>
                        <Var name="_notifAni">
                            <VariableAnimation initPause="true" loop="false">
                                <Item time="0" value="0"/>
                                <Item time="100" value="int(#touch_x-#touch_begin_x)"/>
                                <Item time="300" value="ifelse(int(#touch_x-#touch_begin_x)}=300,1080,0)"/>
                                <Triggers>
                                    <Trigger action="end" condition="#_notifAni == 1080">
                                        <AnimationCommand command="play" target="notifUp"/>
                                    </Trigger>
                                </Triggers>
                            </VariableAnimation>
                        </Var>
                        <Var name="notifUp">
                            <VariableAnimation name="notifUpAni" initPause="true" loop="false">
                                <Item time="0" value="0"/>
                                <Item time="300" value="1"/>
                                <Triggers>
                                    <Trigger action="end" condition="#notifUpAni.current_frame == -1">
                                        <MultiCommand>
                                            <IntentCommand action="com.miui.app.ExtraStatusBarManager.action_remove_keyguard_notification" broadcast="true">
                                                <Extra name="com.miui.app.ExtraStatusBarManager.extra_notification_key" expression="@notice_key[#notifDown]" type="int"/>
                                                <Extra name="com.miui.app.ExtraStatusBarManager.extra_notification_click" expression="0" type="int"/>
                                            </IntentCommand>
                                        </MultiCommand>
                                    </Trigger>
                                </Triggers>
                            </VariableAnimation>
                        </Var>
                        <Group alpha="255" visibility="1">
                            <Array count="4" indexName="_notice" visibility="#hasnotifications}0">
                                <Button alignChildren="true" alpha="ifelse(#notifDown==#_notice,255-int(#_notifMove)/3,255)" h="162" visibility="#_notice { #hasnotifications" w="1080" x="ifelse(#notifDown==#_notice,#_notifMove,0)" y="#_notice*182 - ifelse(#_notice}#notifDown,#notifUp*182,0)">
                                    <Image src="shortcut/notice_bg.png" x="26" xfermodeNum="8"/>
                                    <Image alpha="125" src="shortcut/notice_bg.png" x="26"/>
                                    <Text name="noticeTime" align="right" alignV="center" alpha="125" color="#000000" fontFamily="mipro-regular" size="40" spacingAdd="1" textExp="@notice_time[#_notice]" x="#screen_width-66" y="52"/>
                                    <Text alignV="center" alpha="255" bold="true" color="#000000" fontFamily="mipro-medium" marqueeSpeed="30" size="44" textExp="@notice_title[#_notice]" w="#screen_width-194-66- ifelse(#time_format,100,150)" x="194" y="52"/>
                                    <Text alignV="center" alpha="255" color="#000000" fontFamily="mipro-regular" marqueeSpeed="30" size="40" textExp="@notice_content[#_notice]" w="#screen_width-194-66" x="194" y="110"/>
                                    <Triggers>
                                        <Trigger action="down">
                                            <VariableCommand name="notifDown" expression="#_notice"/>
                                            <VariableCommand name="NotifMoveDown" expression="1"/>
                                        </Trigger>
                                        <Trigger action="up,cancel">
                                            <VariableCommand name="NotifMoveDown" expression="0"/>
                                            <AnimationCommand command="play(100,300)" target="_notifAni"/>
                                            <IntentCommand action="com.miui.app.ExtraStatusBarManager.action_remove_keyguard_notification" broadcast="true" condition="abs(#touch_x-#touch_begin_x){10">
                                                <Extra name="com.miui.app.ExtraStatusBarManager.extra_notification_key" expression="@notice_key[#notifDown]" type="int"/>
                                                <Extra name="com.miui.app.ExtraStatusBarManager.extra_notification_click" expression="1" type="int"/>
                                            </IntentCommand>
                                        </Trigger>
                                    </Triggers>
                                </Button>
                            </Array>
                        </Group>
                        <Var name="notice_icon" const="true" type="number[]" values="60,26,110,110"/>
                        <Group alpha="255" visibility="1">
                            <Image name="notice_icon0" alpha="ifelse(#notifDown==0,255-int(#_notifMove)/3,255)" h="#notice_icon[3]" visibility="#hasnotifications}=1" w="#notice_icon[2]" x="#notice_icon[0]+ifelse(#notifDown==0,#_notifMove,0)" y="#notice_icon[1]+0*182 - ifelse(0}#notifDown,#notifUp*182,0)"/>
                            <Image name="notice_icon1" alpha="ifelse(#notifDown==1,255-int(#_notifMove)/3,255)" h="#notice_icon[3]" visibility="#hasnotifications}=2" w="#notice_icon[2]" x="#notice_icon[0]+ifelse(#notifDown==1,#_notifMove,0)" y="#notice_icon[1]+1*182 - ifelse(1}#notifDown,#notifUp*182,0)"/>
                            <Image name="notice_icon2" alpha="ifelse(#notifDown==2,255-int(#_notifMove)/3,255)" h="#notice_icon[3]" visibility="#hasnotifications}=3" w="#notice_icon[2]" x="#notice_icon[0]+ifelse(#notifDown==2,#_notifMove,0)" y="#notice_icon[1]+2*182 - ifelse(2}#notifDown,#notifUp*182,0)"/>
                            <Image name="notice_icon3" alpha="ifelse(#notifDown==3,255-int(#_notifMove)/3,255)" h="#notice_icon[3]" visibility="#hasnotifications}=4" w="#notice_icon[2]" x="#notice_icon[0]+ifelse(#notifDown==3,#_notifMove,0)" y="#notice_icon[1]+3*182 - ifelse(3}#notifDown,#notifUp*182,0)"/>
                        </Group>
                    </Group>
                </Group>
            </Group>
        </Group>

        <!--! Missed Call Reminder -->
        <Group alpha="255+#screenY_alpha" visibility="1" y="#screen_y*0.8">
            <Group visibility="#call_missed_count } 0" y="#hasnotifications } 0*70">
                <Button align="center" alignV="center" h="80" w="300" x="#screen_width/2" y="#screen_height-215">
                    <Normal/>
                    <Pressed>
                        <Rectangle align="center" alignV="center" cornerRadius="40,40" fillColor="#ffffffff" h="80" w="340" x="#screen_width/2" xfermodeNum="8" y="#screen_height-215"/>
                        <Rectangle align="center" alignV="center" alpha="255*0.5" cornerRadius="40,40" fillColor="#ffffff" h="80" w="340" x="#screen_width/2" y="#screen_height-215"/>
                    </Pressed>
                    <Triggers>
                        <Trigger action="up">
                            <IntentCommand action="android.intent.action.MAIN" class="com.android.contacts.activities.TwelveKeyDialer" condition="#btnv" package="com.android.contacts"/>
                            <ExternCommand command="unlock" condition="#btnv"/>
                        </Trigger>
                    </Triggers>
                </Button>
                <Group x="#screen_width/2-#call_missed_t.text_width/2-20">
                    <Circle name="call_missed_c" alignV="center" fillColor="#ffffff" r="16" x="0" y="#screen_height-215"/>
                    <Text name="call_missed_t" alignV="center" alpha="255" color="#ffffff" size="40" textExp="'Missed call '+ #call_missed_count" x="0+32+6" y="#screen_height-215"/>
                </Group>
            </Group>
        </Group>
        
        <!--! Music -->
        <Group alpha="255" visibility="1">
            <Group alpha="255" visibility="#music_btn" y="#lsMusic_y">
                <Group alpha="255+#screenY_alpha" visibility="#MusicAni">
                    <Group alpha="#swp_alpha_o" visibility="1">
                        <Group h="435" visibility="1" w="1028" x="#screen_width/2-514" y="(#up_down*(0)+(#screen_height-#down_up)*1-#notif_listHeight*1-455*1+182*1)*(1)+(#up_down*(0)+(#screen_height-#down_up)*0-#notice_list_Cover*0-455*0+182*0)*0">
                            <MusicControl name="music_control" autoShow="true" enableLyric="true" visibility="false">
                                <Image alignV="bottom" h="435" src="music/music_bg.png" w="1028" x="0" xfermodeNum="8" y="435"/>
                                <Image alignV="bottom" alpha="125" h="435" src="music/music_bg.png" w="1028" x="0" y="435"/>
                                <Group align="center" alignV="center" alpha="255" clip="true" h="152" layered="true" pivotX="152/2" pivotY="152/2" scale="1" w="152" x="40+66" y="40+66">
                                    <Rectangle cornerRadius="26" fillColor="#ff000000" h="152" w="152"/>
                                    <!--! Album Cover -->
                                    <Image h="152" src="music/apps/music.png" srcid="#musicTypes" visibility="#music_album_cover.bmp_width == 0" w="152" xfermodeNum="5"/>
                                    <Image name="music_album_cover" h="152" w="152" xfermodeNum="5"/>
                                </Group>
                                <Var name="title_max_w" expression="ifelse(le(#music_title.text_width,660),#music_title.text_width,660)" type="number"/>
                                <Var name="artist_max_w" expression="ifelse(le(#music_artist.text_width,660),#music_artist.text_width,660)" type="number"/>
                                <Text name="music_title" align="center" bold="true" color="#ff000000" marqueeSpeed="30" size="44" textExp="ifelse(strIsEmpty(@music_control.title),'no music',@music_control.title)" w="659" x="203+#title_max_w/2" y="46"/>
                                <Text name="music_artist" align="center" color="#80000000" fontFamily="mipro-regular" marqueeSpeed="30" size="44" textExp="ifelse(strIsEmpty(@music_control.artist),'--',@music_control.artist)" w="659" x="203+#artist_max_w/2" y="110"/>
                                <Group visibility="1">
                                    <Text bold="true" color="#80000000" size="32" textExp="ifelse(int(#music_control.music_position/600000)==0,'',int(#music_control.music_position/600000))+int((#music_control.music_position/60000)%10)+':'+int(#music_control.music_position/1000%60/10)+int(#music_control.music_position/1000%60%10)" x="60" y="206"/>
                                    <Text bold="true" color="#80000000" size="32" textExp="'-'+ifelse(int((#music_control.music_duration-#music_control.music_position)/600000)==0,'',int((#music_control.music_duration-#music_control.music_position)/600000))+int(((#music_control.music_duration-#music_control.music_position)/60000)%10)+':'+int((#music_control.music_duration-#music_control.music_position)/1000%60/10)+int((#music_control.music_duration-#music_control.music_position)/1000%60%10)" x="898" y="206"/>
                                </Group>
                                <Group alpha="255*0.6">
                                    <Rectangle cornerRadius="10" fillColor="#ff000000" h="20" w="731" x="149" xfermodeNum="8" y="216"/>
                                </Group>
                                <Group alpha="255*0.6">
                                    <Rectangle cornerRadius="10" fillColor="#ff000000" h="20" w="731" x="149" xfermodeNum="8" y="216"/>
                                </Group>
                                <Rectangle alpha="255*0.5" cornerRadius="10" fillColor="#ff000000" h="20" w="(731)*#musicPosition/#music_control.music_duration" x="149" y="216"/>
                                <Button name="music_prev" h="140" visibility="1" w="140" x="236" y="265">
                                    <Normal>
                                        <Image src="music/prev.png" tint="#ff000000" x="236" y="265"/>
                                    </Normal>
                                    <Pressed>
                                        <Image src="music/prev_p.png" tint="#ff000000" x="236" y="265"/>
                                    </Pressed>
                                </Button>
                                <Button name="music_play" h="140" visibility="1" w="140" x="446" y="265">
                                    <Normal>
                                        <Image src="music/play.png" tint="#ff000000" x="446" y="265"/>
                                    </Normal>
                                    <Pressed>
                                        <Image src="music/play_p.png" tint="#ff000000" x="446" y="265"/>
                                    </Pressed>
                                </Button>
                                <Button name="music_pause" h="140" visibility="1" w="140" x="446" y="265">
                                    <Normal>
                                        <Image src="music/pause.png" tint="#ff000000" x="446" y="265"/>
                                    </Normal>
                                    <Pressed>
                                        <Image src="music/pause_p.png" tint="#ff000000" x="446" y="265"/>
                                    </Pressed>
                                </Button>
                                <Button name="music_next" h="140" visibility="1" w="140" x="656" y="265">
                                    <Normal>
                                        <Image src="music/next.png" tint="#ff000000" x="656" y="265"/>
                                    </Normal>
                                    <Pressed>
                                        <Image src="music/next_p.png" tint="#ff000000" x="656" y="265"/>
                                    </Pressed>
                                </Button>
                                <Group alpha="255" x="908" y="101">
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="18+abs(cos(#time/(12*18))*13*(1-#MusicAniR))" w="6" x="0" xfermodeNum="8"/>
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="40-abs(cos(#time/(14*18))*13*(1-#MusicAniR))" w="6" x="10" xfermodeNum="8"/>
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="28+abs(cos(#time/(16*18))*13*(1-#MusicAniR))" w="6" x="10*2" xfermodeNum="8"/>
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="40-abs(cos(#time/(18*18))*13*(1-#MusicAniR))" w="6" x="10*3" xfermodeNum="8"/>
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="28+abs(cos(#time/(20*18))*13*(1-#MusicAniR))" w="6" x="10*4" xfermodeNum="8"/>
                                    <Rectangle alignV="center" cornerRadius="3" fillColor="#ff000000" h="30-abs(cos(#time/(22*18))*13*(1-#MusicAniR))" w="6" x="10*5" xfermodeNum="8"/>
                                </Group>
                                <Image alpha="100" h="140" src="music/airplay/icon.png" srcid="#bluetooth_state!=0" tint="#ff000000" visibility="1" w="140" x="855" y="265"/>
                                <Button h="140" visibility="1" w="140" x="855" y="265">
                                    <Triggers>
                                        <Trigger action="double" condition="#btnv">
                                            <IntentCommand action="android.intent.action.MAIN" class="com.miui.player.ui.MusicBrowserActivity" condition="int(@__miui_version_code){=8" package="com.miui.player"/>
                                            <IntentCommand action="android.intent.action.MAIN" classExp="@music_control.class" condition="int(@__miui_version_code)}=9" packageExp="@music_control.package"/>
                                            <ExternCommand command="unlock"/>
                                        </Trigger>
                                    </Triggers>
                                </Button>
                            </MusicControl>
                            <MusicControl name="music_control" autoShow="true" visibility="false">
                                <Button name="music_play" h="140" visibility="1" w="140" x="860" y="30"/>
                                <Button name="music_pause" h="140" visibility="1" w="140" x="860" y="30"/>
                            </MusicControl>
                        </Group>
                    </Group>
                </Group>
            </Group>

            <!--! Shortcuts -->
            <Group alpha="255" visibility="#ls_shortcut" y="#screen_y*0.8">
                <Group alpha="#swp_alpha_o+#screenY_alpha" visibility="1">
                    
                    <!--! Camera -->
                    <Image alpha="255" h="138" src="shortcut/bg_0.png" w="138" x="#screen_width-264" xfermodeNum="8" y="#screen_height-275"/>
                    <Image alpha="255*0.2" h="138" src="shortcut/bg_0.png" w="138" x="#screen_width-264" y="#screen_height-275"/>
                    <Image h="132" src="shortcut/camera.png" srcid="#bg_color" w="132" x="#screen_width-261" y="#screen_height-273"/>

                    <!--! Flash -->
                    <Group visibility="eq(#lightSwitch,0)">
                        <Image alpha="255" h="138" src="shortcut/bg_0.png" w="138" x="126" xfermodeNum="8" y="#screen_height-275"/>
                        <Image alpha="255*0.2" h="138" src="shortcut/bg_0.png" w="138" x="126" y="#screen_height-275"/>
                        <Image h="132" src="shortcut/light.png" srcid="#bg_color" w="132" x="129" y="#screen_height-270"/>
                    </Group>
                    <Group visibility="eq(#lightSwitch,1)">
                        <Image alpha="255" h="138" src="shortcut/bg_1.png" w="138" x="126" xfermodeNum="8" y="#screen_height-275"/>
                        <Image alpha="255*0.7" h="138" src="shortcut/bg_1.png" w="138" x="126" y="#screen_height-275"/>
                        <Image h="132" src="shortcut/light_1.png" w="132" x="129" y="#screen_height-270"/>
                    </Group>

                    <Group visibility="1">
                        <Button h="138" haptic="true" interceptTouch="true" w="138" x="#screen_width-264" y="#screen_height-275">
                            <Triggers>
                                <Trigger action="up">
                                    <IntentCommand action="android.intent.action.MAIN" class="com.android.camera.Camera" condition="#btnv" package="com.android.camera">
                                        <Extra name="ShowCameraWhenLocked" expression="1" type="boolean"/>
                                        <Extra name="StartActivityWhenLocked" expression="1" type="boolean"/>
                                    </IntentCommand>
                                </Trigger>
                            </Triggers>
                        </Button>
                        <Button h="138" haptic="true" interceptTouch="true" w="138" x="126" y="#screen_height-275">
                            <Triggers>
                                <Trigger action="up">
                                    <VariableCommand name="lightSwitch" condition="#btnv" expression="!(#lightSwitch)" persist="true"/>
                                    <IntentCommand action="miui.intent.action.TOGGLE_TORCH" broadcast="true" condition="#btnv">
                                        <Extra name="miui.intent.extra.IS_ENABLE" expression="ifelse(int(@__miui_version_code)}=8,#lightSwitch,1)" type="boolean"/>
                                    </IntentCommand>
                                </Trigger>
                            </Triggers>
                        </Button>
                    </Group>
                </Group>
            </Group>
        </Group>
    </Group>

    <!--! Swipe Unlock Status-->

    <Group visibility="1">
        <Var name="screen_y" expression="min(#touch_y-#touch_begin_y+100,0)*#unlock+#unlockBack"/>
        <Var name="screenY_alpha" expression="255*#screen_y/600*#unlocked"/>
        <Var name="unlockBack">
            <VariableAnimation initPause="true" loop="false">
                <Item time="0" value="0"/>
                <Item easeType="BackEaseOut" time="100" value="min(#touch_y-#touch_begin_y+100,0)"/>
                <Item time="400" value="0"/>
                <Item easeType="BackEaseOut" time="500" value="min(#touch_y-#touch_begin_y+100,0)"/>
                <Item time="1500" value="-#screen_height"/>
                <Item time="2000" value="0"/>
            </VariableAnimation>
        </Var>
        <Button h="#screen_height" w="#screen_width">
            <Triggers>
                <Trigger action="down">
                    <VariableCommand name="unlock" expression="1"/>
                    <VariableCommand name="unlocked" expression="1"/>
                    <AnimationCommand command="play" target="framerateControllerAni"/>
                </Trigger>
                <Trigger action="move">
                    <AnimationCommand command="play" condition="#frame_rate{70" target="framerateControllerAni"/>
                </Trigger>
                <Trigger action="up,cancel">
                    <VariableCommand name="unlock" expression="0"/>
                    <AnimationCommand command="play" target="framerateControllerAni"/>
                </Trigger>
                <Trigger action="up,cancel">
                    <AnimationCommand command="play(ifelse((#touch_begin_y-#touch_y){=400,100,500),ifelse((#touch_begin_y-#touch_y){=400,400,2000))" target="unlockBack"/>
                    <ExternCommand command="unlock" condition="ge(#touch_begin_y-#touch_y,400)"/>
                </Trigger>
            </Triggers>
        </Button>
    </Group>
</Lockscreen>